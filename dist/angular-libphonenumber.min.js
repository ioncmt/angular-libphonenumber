/**
 * angular-libphonenumber
 * Nathan Hammond's libphonenumber ported to an angular filter
 * @version v1.1.0
 * @link https://github.com/cwill747/angular-libphonenumber
 * @license Apache-2.0
 */
!function(e){e.module("cwill747.phonenumber",[]).directive("phoneNumber",["$log","$window",function(e,n){function t(e){return e?e.replace(/([^0-9|+])/g,""):e}function r(t,r){var o=t;try{o=n.phoneUtils.formatAsTyped(t,r)}catch(n){e.debug(n)}return o}function o(){return navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i)}return{restrict:"A",require:"?ngModel",scope:{countryCode:"=",nonFormatted:"=?"},controllerAs:"",controller:function(){this.countryCode=this.countryCode||"us"},link:function(i,u,c,l){function a(e){var n=t(e);i.nonFormatted=n;var o="";return o=n&&n.length>1?r(n,i.countryCode):n,o.trim()}function s(e){return l.$isEmpty(e)?e:r(t(e),i.countryCode)}function h(e){if(l.$isEmpty(e))return i.nonFormatted="",e;var n=a(e);if(n===e)return e;var r=g.selectionStart,u=g.selectionEnd+n.length-e.length;return e.length<n.length&&(r+=n.length-e.length),e.length>n.length+1&&(r-=n.length-e.length),l.$setViewValue(n),l.$render(),o()&&(u=r=n.length),window.setTimeout(function(){g.setSelectionRange(r,u)},0),t(n)}function d(t){var r=!1;try{r=n.phoneUtils.isValidNumberForRegion(t,i.countryCode)}catch(n){e.debug(n)}var o=l.$isEmpty(t)||r;return l.$setValidity("phoneNumber",o),t}var g=u[0];i.$watch("countryCode",function(){l.$modelValue=l.$viewValue+" "}),l.$formatters.push(s),l.$formatters.push(d),l.$parsers.push(h),l.$parsers.push(d)}}}])}(angular);